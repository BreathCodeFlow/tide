name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build for macOS
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-13
            name: tide-x86_64-apple-darwin
          - target: aarch64-apple-darwin
            os: macos-14
            name: tide-aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ${{ matrix.name }}.tar.gz tide
          shasum -a 256 ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.name }}.tar.gz
          asset_name: ${{ matrix.name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.name }}.tar.gz.sha256
          asset_name: ${{ matrix.name }}.tar.gz.sha256
          asset_content_type: text/plain

  homebrew-pr:
    name: Update Homebrew Formula (Manual)
    needs: [create-release, build]
    runs-on: ubuntu-latest
    steps:
      - name: Homebrew Instructions
        run: |
          echo "Release created successfully!"
          echo ""
          echo "To create/update your Homebrew tap:"
          echo "1. Create a homebrew-tap repository (if you haven't already)"
          echo "2. Add a Formula/tide.rb file with the formula"
          echo "3. Use the release artifacts and checksums from this release"
          echo ""
          echo "Example command to get the SHA256:"
          echo "curl -sL https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/tide-aarch64-apple-darwin.tar.gz | shasum -a 256"
